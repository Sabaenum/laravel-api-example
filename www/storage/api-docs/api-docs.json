{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Thrift Store",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "description": "Retrieve a list of all books",
                "operationId": "8e67fc126a51598255c56d362d50466e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Book"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Store a new book",
                "description": "Creates a new book record in the database",
                "operationId": "6c5e00fe01c5e356fa95e728c3cfbc98",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": "{'title': ['The title field is required.']}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/books/{book}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a specific book",
                "description": "Retrieve information about a specific book",
                "operationId": "4fd937759f65ce4d38eeee7937a93a11",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "ID of the book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "description": "Delete a specific book from the database",
                "operationId": "1870d5221f34fa03e3ece095b7bf2b63",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully"
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a book",
                "description": "Update the specified book in the database",
                "operationId": "29ee174119e6e1dff8a3c4e404e96eb5",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Example Book"
                                    },
                                    "publisher": {
                                        "type": "string",
                                        "example": "Example Publisher"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "Example Author"
                                    },
                                    "genre": {
                                        "type": "string",
                                        "example": "Fantasy"
                                    },
                                    "publicationDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-17"
                                    },
                                    "amountWords": {
                                        "type": "integer",
                                        "example": "100000"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "19.99"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": "{'title': ['The title field is required.']}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Example Book"
                    },
                    "publisher": {
                        "type": "string",
                        "example": "Example Publisher"
                    },
                    "author": {
                        "type": "string",
                        "example": "Example Author"
                    },
                    "genre": {
                        "type": "string",
                        "example": "Fantasy"
                    },
                    "publicationDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-17"
                    },
                    "amountWords": {
                        "type": "integer",
                        "example": "100000"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": "19.99"
                    }
                },
                "type": "object"
            }
        }
    }
}